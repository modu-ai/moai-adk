import{_ as r,C as E,c as d,o as n,a3 as h,b as p,j as t,w as i,a,G as e,a4 as k}from"./chunks/framework.L7k57l8l.js";const u=JSON.parse('{"title":"@TAG 추적성 시스템 (필수 TAG)","description":"","frontmatter":{},"headers":[],"relativePath":"guide/tag-system.md","filePath":"guide/tag-system.md"}'),g={name:"guide/tag-system.md"};function c(o,s,y,A,F,C){const l=E("Mermaid");return n(),d("div",null,[s[4]||(s[4]=h('<h1 id="tag-추적성-시스템-필수-tag" tabindex="-1">@TAG 추적성 시스템 (필수 TAG) <a class="header-anchor" href="#tag-추적성-시스템-필수-tag" aria-label="Permalink to &quot;@TAG 추적성 시스템 (필수 TAG)&quot;">​</a></h1><h2 id="핵심-철학-code-first-방식" tabindex="-1">핵심 철학: CODE-FIRST 방식 <a class="header-anchor" href="#핵심-철학-code-first-방식" aria-label="Permalink to &quot;핵심 철학: CODE-FIRST 방식&quot;">​</a></h2><p><strong>TAG의 진실은 코드 자체에만 존재합니다.</strong></p><ul><li>별도의 TAG 인덱스 파일 없음 (<code>.moai/indexes/</code> 미사용)</li><li>코드 직접 스캔으로 실시간 검증: <code>rg &#39;@(SPEC|TEST|CODE|DOC):&#39; -n</code></li><li>중간 캐시 없음: 코드가 유일한 진실의 원천 (Single Source of Truth)</li></ul>',4)),(n(),p(k,null,{default:i(()=>[e(l,{id:"mermaid-26",class:"mermaid my-class",graph:"graph%20LR%0A%20%20%20%20SPEC%5B%22.moai%2Fspecs%2F%3Cbr%2F%3E%40SPEC%3AID%22%5D%20--%3E%20TEST%5B%22tests%2F%3Cbr%2F%3E%40TEST%3AID%22%5D%0A%20%20%20%20TEST%20--%3E%20CODE%5B%22src%2F%3Cbr%2F%3E%40CODE%3AID%22%5D%0A%20%20%20%20CODE%20--%3E%20DOC%5B%22docs%2F%3Cbr%2F%3E%40DOC%3AID%22%5D%0A%20%20%20%20CODE%20--%3E%20SCAN%5B%22rg%20'%40TAG'%20-n%3Cbr%2F%3E%EC%8B%A4%EC%8B%9C%EA%B0%84%20%EC%8A%A4%EC%BA%94%22%5D%0A%20%20%20%20SCAN%20--%3E%20VERIFY%5B%22TAG%20%EC%B2%B4%EC%9D%B8%20%EA%B2%80%EC%A6%9D%22%5D%0A%20%20%20%20VERIFY%20--%3E%20REPORT%5B%22%EB%8F%99%EA%B8%B0%ED%99%94%20%EB%A6%AC%ED%8F%AC%ED%8A%B8%22%5D%0A%0A"})]),fallback:i(()=>[...s[0]||(s[0]=[a(" Loading... ",-1)])]),_:1})),s[5]||(s[5]=t("h2",{id:"tag-체계",tabindex:"-1"},[a("@TAG 체계 "),t("a",{class:"header-anchor",href:"#tag-체계","aria-label":'Permalink to "@TAG 체계"'},"​")],-1)),s[6]||(s[6]=t("p",null,"MoAI-ADK는 단일 TAG 체계를 사용합니다.",-1)),s[7]||(s[7]=t("h3",{id:"tdd-사이클-완벽-정렬",tabindex:"-1"},[a("TDD 사이클 완벽 정렬 "),t("a",{class:"header-anchor",href:"#tdd-사이클-완벽-정렬","aria-label":'Permalink to "TDD 사이클 완벽 정렬"'},"​")],-1)),(n(),p(k,null,{default:i(()=>[e(l,{id:"mermaid-36",class:"mermaid my-class",graph:"graph%20LR%0A%20%20%20%20SPEC%5B%22%40SPEC%3AID%3Cbr%2F%3E%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD%20%EB%AA%85%EC%84%B8%22%5D%20--%3E%20TEST%5B%22%40TEST%3AID%3Cbr%2F%3ERED%20Phase%22%5D%0A%20%20%20%20TEST%20--%3E%20CODE%5B%22%40CODE%3AID%3Cbr%2F%3EGREEN%20%2B%20REFACTOR%22%5D%0A%20%20%20%20CODE%20--%3E%20DOC%5B%22%40DOC%3AID%3Cbr%2F%3E%EB%AC%B8%EC%84%9C%ED%99%94%22%5D%0A%0A"})]),fallback:i(()=>[...s[1]||(s[1]=[a(" Loading... ",-1)])]),_:1})),s[8]||(s[8]=h(`<h3 id="필수-tag" tabindex="-1">필수 TAG <a class="header-anchor" href="#필수-tag" aria-label="Permalink to &quot;필수 TAG&quot;">​</a></h3><table tabindex="0"><thead><tr><th>TAG</th><th>역할</th><th>TDD 단계</th><th>위치</th><th>필수</th></tr></thead><tbody><tr><td><code>@SPEC:ID</code></td><td>요구사항 명세 (EARS)</td><td>사전 준비</td><td>.moai/specs/</td><td>필수</td></tr><tr><td><code>@TEST:ID</code></td><td>테스트 케이스</td><td>RED</td><td>tests/</td><td>필수</td></tr><tr><td><code>@CODE:ID</code></td><td>구현 코드</td><td>GREEN + REFACTOR</td><td>src/</td><td>필수</td></tr><tr><td><code>@DOC:ID</code></td><td>문서화</td><td>REFACTOR</td><td>docs/</td><td>선택</td></tr></tbody></table><blockquote><p>모든 신규 기능은 위 4개 TAG를 기준으로 작성합니다. 체인 검증(<code>rg &#39;@(SPEC|TEST|CODE|DOC):&#39; -n</code>, <code>/alfred:3-sync</code>)도 이 체계를 기반으로 동작합니다.</p></blockquote><h2 id="tag-block-템플릿" tabindex="-1">TAG BLOCK 템플릿 <a class="header-anchor" href="#tag-block-템플릿" aria-label="Permalink to &quot;TAG BLOCK 템플릿&quot;">​</a></h2><h3 id="spec-문서-history-섹션-필수" tabindex="-1">SPEC 문서 HISTORY 섹션 (필수) <a class="header-anchor" href="#spec-문서-history-섹션-필수" aria-label="Permalink to &quot;SPEC 문서 HISTORY 섹션 (필수)&quot;">​</a></h3><p><strong>모든 SPEC 문서는 HISTORY 섹션을 포함해야 합니다.</strong> TAG의 진화 과정을 추적하여 요구사항 변경 이력을 명확히 기록합니다.</p><p><strong>HISTORY 섹션 역할</strong>:</p><ul><li>SPEC 버전 관리: YAML front matter의 version과 동기화</li><li>변경 이력 추적: 요구사항 수정, 추가, 삭제 기록</li><li>작성자/리뷰어 명시: 책임 소재 명확화</li><li>변경 이유 문서화: 컨텍스트 보존</li></ul><p><strong>HISTORY 태그</strong>:</p><ul><li><code>INITIAL</code>: 최초 작성 (v1.0.0)</li><li><code>ADDED</code>: 새 기능/요구사항 추가 → Minor 버전 증가</li><li><code>CHANGED</code>: 기존 내용 수정 → Patch 버전 증가</li><li><code>FIXED</code>: 버그/오류 수정 → Patch 버전 증가</li><li><code>REMOVED</code>: 기능/요구사항 제거 → Major 버전 증가</li><li><code>BREAKING</code>: 하위 호환성 깨지는 변경 → Major 버전 증가</li><li><code>DEPRECATED</code>: 향후 제거 예정 표시</li></ul><p><strong>버전 관리 원칙</strong>:</p><ul><li><strong>TAG ID는 영구 불변</strong>: AUTH-001은 절대 변경되지 않음</li><li><strong>TAG 내용은 자유롭게 수정</strong>: HISTORY에 기록 필수</li><li><strong>Semantic Versioning</strong>: Major.Minor.Patch</li><li><strong>코드/테스트에서는 버전 미포함</strong>: <code>SPEC: SPEC-AUTH-001.md</code> (버전 없음)</li></ul><h3 id="기본-템플릿" tabindex="-1">기본 템플릿 <a class="header-anchor" href="#기본-템플릿" aria-label="Permalink to &quot;기본 템플릿&quot;">​</a></h3><p><strong>소스 코드 (src/)</strong>:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @CODE:AUTH-001 | SPEC: SPEC-AUTH-001.md | TEST: tests/auth/service.test.ts</span></span></code></pre></div><p><strong>테스트 코드 (tests/)</strong>:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @TEST:AUTH-001 | SPEC: SPEC-AUTH-001.md</span></span></code></pre></div><p><strong>SPEC 문서 (.moai/specs/)</strong>:</p><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">---</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">AUTH-001</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0.0</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">active</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">created</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2025-10-01</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">updated</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2025-10-01</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">---</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;"># @SPEC:AUTH-001: JWT 인증 시스템</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">## HISTORY</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">### v1.0.0 (2025-10-01)</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-light-font-weight:bold;--shiki-dark:#E1E4E8;--shiki-dark-font-weight:bold;"> **INITIAL**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: JWT 인증 시스템 명세 작성</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-light-font-weight:bold;--shiki-dark:#E1E4E8;--shiki-dark-font-weight:bold;"> **AUTHOR**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: @dev-team</span></span></code></pre></div><p><strong>문서 (docs/)</strong>:</p><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;"># @DOC:AUTH-001: JWT 인증 시스템 가이드</span></span></code></pre></div><h3 id="code-서브-카테고리-주석-레벨" tabindex="-1">@CODE 서브 카테고리 (주석 레벨) <a class="header-anchor" href="#code-서브-카테고리-주석-레벨" aria-label="Permalink to &quot;@CODE 서브 카테고리 (주석 레벨)&quot;">​</a></h3><p>구현 세부사항은 <code>@CODE:ID</code> 내부에 주석으로 표기:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @CODE:AUTH-001 | SPEC: SPEC-AUTH-001.md | TEST: tests/auth/service.test.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AuthService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // @CODE:AUTH-001:API: 인증 API 엔드포인트</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  async</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> authenticate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">username</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">password</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AuthResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // @CODE:AUTH-001:DOMAIN: 입력 검증</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">validateInput</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(username, password);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // @CODE:AUTH-001:DATA: 사용자 조회</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> user</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.userRepository.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">findByUsername</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(username);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // @CODE:AUTH-001:INFRA: JWT 토큰 생성</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generateToken</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(user);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>서브 카테고리 목록</strong>:</p><ul><li><code>@CODE:ID:API</code> - REST API, GraphQL 엔드포인트</li><li><code>@CODE:ID:UI</code> - 컴포넌트, 뷰, 화면</li><li><code>@CODE:ID:DATA</code> - 데이터 모델, 스키마, 타입</li><li><code>@CODE:ID:DOMAIN</code> - 비즈니스 로직, 도메인 규칙</li><li><code>@CODE:ID:INFRA</code> - 인프라, 데이터베이스, 외부 연동</li></ul><h2 id="언어별-적용-예시" tabindex="-1">언어별 적용 예시 <a class="header-anchor" href="#언어별-적용-예시" aria-label="Permalink to &quot;언어별 적용 예시&quot;">​</a></h2><h3 id="typescript" tabindex="-1">TypeScript <a class="header-anchor" href="#typescript" aria-label="Permalink to &quot;TypeScript&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @CODE:AUTH-001 | SPEC: SPEC-AUTH-001.md | TEST: tests/auth/service.test.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @CODE:AUTH-001: JWT 인증 서비스</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * TDD 이력:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * - RED: tests/auth/service.test.ts 작성</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * - GREEN: 최소 구현 (bcrypt, JWT)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * - REFACTOR: 타입 안전성 추가, 에러 처리 개선</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AuthService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // @CODE:AUTH-001:API: 사용자 인증 API</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  async</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> authenticate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">username</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">password</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AuthResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // @CODE:AUTH-001:DOMAIN: 입력 검증</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">validateInput</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(username, password);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // @CODE:AUTH-001:DATA: 사용자 조회</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> user</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.userRepository.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">findByUsername</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(username);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">verifyCredentials</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(user, password);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>테스트 코드</strong>:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @TEST:AUTH-001 | SPEC: SPEC-AUTH-001.md</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">describe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;AuthService&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;@TEST:AUTH-001: should authenticate valid user&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> service</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AuthService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> service.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">authenticate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;password&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    expect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result.success).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toBe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="python" tabindex="-1">Python <a class="header-anchor" href="#python" aria-label="Permalink to &quot;Python&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># @CODE:AUTH-001 | SPEC: SPEC-AUTH-001.md | TEST: tests/auth/test_service.py</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AuthenticationService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    @CODE:AUTH-001: JWT 인증 서비스</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    TDD 이력:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    - RED: tests/auth/test_service.py 작성</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    - GREEN: 최소 구현 (hashlib, JWT)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    - REFACTOR: 타입 힌트 추가, 예외 처리 개선</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> authenticate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self, username: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, password: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) -&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;&quot;&quot;@CODE:AUTH-001:API: 사용자 인증 API&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # @CODE:AUTH-001:DOMAIN: 입력 검증</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> not</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">._validate_input(username, password):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> False</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # @CODE:AUTH-001:DATA: 사용자 조회</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        user_data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">._get_user_data(username)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">._verify_credentials(user_data, password)</span></span></code></pre></div><p><strong>테스트 코드</strong>:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># @TEST:AUTH-001 | SPEC: SPEC-AUTH-001.md</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> test_should_authenticate_valid_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">():</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;@TEST:AUTH-001: 유효한 사용자 인증 검증&quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    service </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AuthenticationService()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> service.authenticate(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;user&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;password&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    assert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">is</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> True</span></span></code></pre></div><h3 id="java" tabindex="-1">Java <a class="header-anchor" href="#java" aria-label="Permalink to &quot;Java&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @CODE:AUTH-001 | SPEC: SPEC-AUTH-001.md | TEST: tests/auth/AuthServiceTest.java</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @CODE:AUTH-001: JWT 인증 서비스</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * TDD 이력:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * - RED: AuthServiceTest.java 작성</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * - GREEN: 최소 구현 (Spring Security, JWT)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * - REFACTOR: 의존성 주입, 예외 처리 개선</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AuthenticationService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // @CODE:AUTH-001:API: 사용자 인증 API</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> authenticate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, String </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // @CODE:AUTH-001:DOMAIN: 입력 검증</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        validateInput</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(username, password);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // @CODE:AUTH-001:DATA: 사용자 조회</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        User user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> userRepository.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">findByUsername</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(username);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> verifyPassword</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(user, password);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="go" tabindex="-1">Go <a class="header-anchor" href="#go" aria-label="Permalink to &quot;Go&quot;">​</a></h3><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @CODE:AUTH-001 | SPEC: SPEC-AUTH-001.md | TEST: tests/auth/service_test.go</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> auth</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @CODE:AUTH-001: JWT 인증 서비스</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// TDD 이력:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// - RED: service_test.go 작성</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// - GREEN: 최소 구현 (golang.org/x/crypto, JWT)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// - REFACTOR: 인터페이스 추가, 에러 처리 개선</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AuthenticationService</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    userRepo </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UserRepository</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @CODE:AUTH-001:API: 사용자 인증 API</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">s </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AuthenticationService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Authenticate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">password</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // @CODE:AUTH-001:DOMAIN: 입력 검증</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">validateInput</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(username, password); err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, err</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // @CODE:AUTH-001:DATA: 사용자 조회</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    user, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s.userRepo.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FindByUsername</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(username)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, err</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">verifyPassword</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(user, password), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nil</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="rust" tabindex="-1">Rust <a class="header-anchor" href="#rust" aria-label="Permalink to &quot;Rust&quot;">​</a></h3><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @CODE:AUTH-001 | SPEC: SPEC-AUTH-001.md | TEST: tests/auth/service_test.rs</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/// @CODE:AUTH-001: JWT 인증 서비스</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">///</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/// TDD 이력:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/// - RED: service_test.rs 작성</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/// - GREEN: 최소 구현 (bcrypt, jsonwebtoken)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/// - REFACTOR: Result 타입 추가, 에러 처리 개선</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AuthenticationService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    user_repo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">dyn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UserRepository</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">impl</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AuthenticationService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /// @CODE:AUTH-001:API: 사용자 인증 API</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> fn</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> authenticate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, username</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, password</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // @CODE:AUTH-001:DOMAIN: 입력 검증</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">validate_input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(username, password)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // @CODE:AUTH-001:DATA: 사용자 조회</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> self</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">user_repo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">find_by_username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(username)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.await?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        Ok</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">verify_password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">user, password))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="tag-명명-규칙" tabindex="-1">TAG 명명 규칙 <a class="header-anchor" href="#tag-명명-규칙" aria-label="Permalink to &quot;TAG 명명 규칙&quot;">​</a></h2><h3 id="형식" tabindex="-1">형식 <a class="header-anchor" href="#형식" aria-label="Permalink to &quot;형식&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>TYPE:DOMAIN-###</span></span></code></pre></div><h3 id="구성-요소" tabindex="-1">구성 요소 <a class="header-anchor" href="#구성-요소" aria-label="Permalink to &quot;구성 요소&quot;">​</a></h3><ul><li><strong>TYPE</strong>: TAG 타입 (SPEC, TEST, CODE, DOC)</li><li><strong>DOMAIN</strong>: 도메인 이름 (대문자, 3-10자)</li><li><strong>###</strong>: 일련번호 (001-999)</li></ul><h3 id="좋은-예시" tabindex="-1">좋은 예시 <a class="header-anchor" href="#좋은-예시" aria-label="Permalink to &quot;좋은 예시&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@SPEC:AUTH-001     // 인증 요구사항 명세</span></span>
<span class="line"><span>@TEST:AUTH-001     // 인증 테스트 (같은 ID 사용)</span></span>
<span class="line"><span>@CODE:AUTH-001     // 인증 구현 (같은 ID 사용)</span></span>
<span class="line"><span>@DOC:AUTH-001      // 인증 문서 (같은 ID 사용)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@CODE:LOGIN-003    // 로그인 기능 #3</span></span>
<span class="line"><span>@CODE:USER-005     // 사용자 관리 #5</span></span></code></pre></div><h3 id="나쁜-예시" tabindex="-1">나쁜 예시 <a class="header-anchor" href="#나쁜-예시" aria-label="Permalink to &quot;나쁜 예시&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>AUTH-001          // ❌ @ 타입 누락</span></span>
<span class="line"><span>@CODE:auth-001     // ❌ 소문자 도메인</span></span>
<span class="line"><span>@CODE:A-001        // ❌ 도메인 너무 짧음</span></span>
<span class="line"><span>@CODE:AUTHENTICATION-SERVICE-001  // ❌ 도메인 너무 김</span></span>
<span class="line"><span>@REQ:AUTH-001      // ❌ 구버전 TAG 사용 (현재는 @SPEC)</span></span></code></pre></div><h2 id="코드-스캔-기반-검증" tabindex="-1">코드 스캔 기반 검증 <a class="header-anchor" href="#코드-스캔-기반-검증" aria-label="Permalink to &quot;코드 스캔 기반 검증&quot;">​</a></h2><p>TAG의 진실은 코드 자체에만 존재합니다. <code>rg</code> 명령어로 코드를 직접 스캔하여 TAG를 검증합니다.</p><h3 id="검색-명령어" tabindex="-1">검색 명령어 <a class="header-anchor" href="#검색-명령어" aria-label="Permalink to &quot;검색 명령어&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 모든 TAG 찾기</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@(SPEC|TEST|CODE|DOC):&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 특정 도메인의 모든 TAG 찾기</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;AUTH-001&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 특정 TAG 타입만 찾기</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@CODE:&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;*.ts&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@TEST:&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;*.py&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># TAG 체인 검증</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@SPEC:AUTH-001&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .moai/specs/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@TEST:AUTH-001&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tests/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@CODE:AUTH-001&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@DOC:AUTH-001&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs/</span></span></code></pre></div><h3 id="중복-방지" tabindex="-1">중복 방지 <a class="header-anchor" href="#중복-방지" aria-label="Permalink to &quot;중복 방지&quot;">​</a></h3><p>새 TAG 도입 전 기존 체인 확인:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. 도메인 중복 확인</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;LOGIN-001&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2. TAG 타입별 확인</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@SPEC:LOGIN-&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .moai/specs/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@CODE:LOGIN-&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3. 파일 경로와 함께 확인</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@CODE:LOGIN-&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span></span></code></pre></div><h3 id="무결성-검사" tabindex="-1">무결성 검사 <a class="header-anchor" href="#무결성-검사" aria-label="Permalink to &quot;무결성 검사&quot;">​</a></h3><p><code>/alfred:3-sync</code> 실행 시 자동으로 수행:</p><ol><li><strong>코드 전체 스캔</strong>: 모든 소스 파일에서 TAG 추출</li><li><strong>TAG 체인 검증</strong>: @SPEC → @TEST → @CODE 완결성 확인</li><li><strong>고아 TAG 식별</strong>: SPEC 없는 CODE 탐지</li><li><strong>중복 TAG 탐지</strong>: 동일 TAG의 중복 선언 확인</li></ol><h2 id="다중-언어-프로젝트-예시" tabindex="-1">다중 언어 프로젝트 예시 <a class="header-anchor" href="#다중-언어-프로젝트-예시" aria-label="Permalink to &quot;다중 언어 프로젝트 예시&quot;">​</a></h2><h3 id="통합-인증-시스템-typescript-python" tabindex="-1">통합 인증 시스템 (TypeScript + Python) <a class="header-anchor" href="#통합-인증-시스템-typescript-python" aria-label="Permalink to &quot;통합 인증 시스템 (TypeScript + Python)&quot;">​</a></h3><h4 id="typescript-api-서버" tabindex="-1">TypeScript (API 서버) <a class="header-anchor" href="#typescript-api-서버" aria-label="Permalink to &quot;TypeScript (API 서버)&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// backend-api/src/auth/integrated-auth.ts</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @CODE:AUTH-003 | SPEC: SPEC-AUTH-003.md | TEST: tests/auth/integrated-auth.test.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IntegratedAuthService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * @CODE:AUTH-003: 통합 인증 서비스</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * @CODE:AUTH-003:API: JWT 토큰 생성 (Python 워커와 호환)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  async</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> generateToken</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">user</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> User</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> token</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jwt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sign</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      { userId: user.id, email: user.email },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JWT_SECRET</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      { algorithm: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;HS256&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, expiresIn: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;15m&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    );</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // @CODE:AUTH-003:INFRA: Redis에 토큰 저장 (Python 워커가 사용)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.redis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`token:\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">id</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, token, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;EX&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">900</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> token;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="python-백그라운드-워커" tabindex="-1">Python (백그라운드 워커) <a class="header-anchor" href="#python-백그라운드-워커" aria-label="Permalink to &quot;Python (백그라운드 워커)&quot;">​</a></h4><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># background-worker/src/integrated_auth.py</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># @CODE:AUTH-003 | SPEC: SPEC-AUTH-003.md | TEST: tests/test_integrated_auth.py</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jwt</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> redis</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IntegratedAuthService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;@CODE:AUTH-003: 통합 인증 서비스 (Python)&quot;&quot;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __init__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.redis_client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> redis.Redis(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">host</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;localhost&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">port</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">db</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.jwt_secret </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.getenv(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;JWT_SECRET&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> verify_token</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self, token: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) -&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        @CODE:AUTH-003:API: JWT 토큰 검증 (TypeScript와 호환)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            payload </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jwt.decode(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                token,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.jwt_secret,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">                algorithms</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;HS256&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                &quot;valid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                &quot;user_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: payload[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;userId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                &quot;email&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: payload[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;email&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        except</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jwt.ExpiredSignatureError:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;valid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Token expired&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        except</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jwt.InvalidTokenError:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;valid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Invalid token&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="통합-검증" tabindex="-1">통합 검증 <a class="header-anchor" href="#통합-검증" aria-label="Permalink to &quot;통합 검증&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 다중 언어 프로젝트 전체 스캔</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;AUTH-003&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 출력 예시:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># .moai/specs/SPEC-AUTH-003.md:1:# @SPEC:AUTH-003: 통합 인증 시스템</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># backend-api/src/auth/integrated-auth.ts:1:// @CODE:AUTH-003 | SPEC: ...</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># backend-api/tests/auth/integrated-auth.test.ts:1:// @TEST:AUTH-003 | SPEC: ...</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># background-worker/src/integrated_auth.py:1:# @CODE:AUTH-003 | SPEC: ...</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># background-worker/tests/test_integrated_auth.py:1:# @TEST:AUTH-003 | SPEC: ...</span></span></code></pre></div><h2 id="tag-체인-검증-플로우" tabindex="-1">TAG 체인 검증 플로우 <a class="header-anchor" href="#tag-체인-검증-플로우" aria-label="Permalink to &quot;TAG 체인 검증 플로우&quot;">​</a></h2>`,69)),(n(),p(k,null,{default:i(()=>[e(l,{id:"mermaid-423",class:"mermaid my-class",graph:"sequenceDiagram%0A%20%20%20%20participant%20D%20as%20%EA%B0%9C%EB%B0%9C%EC%9E%90%0A%20%20%20%20participant%20SPEC%20as%20%22.moai%2Fspecs%2F%3Cbr%2F%3E%40SPEC%3AID%22%0A%20%20%20%20participant%20TEST%20as%20%22tests%2F%3Cbr%2F%3E%40TEST%3AID%22%0A%20%20%20%20participant%20CODE%20as%20%22src%2F%3Cbr%2F%3E%40CODE%3AID%22%0A%20%20%20%20participant%20S%20as%20%2Falfred%3A3-sync%0A%20%20%20%20participant%20RG%20as%20ripgrep%20(rg)%0A%20%20%20%20participant%20R%20as%20sync-report.md%0A%0A%20%20%20%20D-%3E%3ESPEC%3A%201.%20SPEC%20%EC%9E%91%EC%84%B1%20(%2Falfred%3A1-spec)%0A%20%20%20%20D-%3E%3ETEST%3A%202.%20%ED%85%8C%EC%8A%A4%ED%8A%B8%20%EC%9E%91%EC%84%B1%20(RED)%0A%20%20%20%20D-%3E%3ECODE%3A%203.%20%EA%B5%AC%ED%98%84%20(GREEN%20%2B%20REFACTOR)%0A%20%20%20%20D-%3E%3ES%3A%204.%20%EB%8F%99%EA%B8%B0%ED%99%94%20%EB%AA%85%EB%A0%B9%20%EC%8B%A4%ED%96%89%0A%20%20%20%20S-%3E%3ERG%3A%20%22rg%20'%40(SPEC%7CTEST%7CCODE)%3A'%20-n%22%0A%20%20%20%20RG-%3E%3ES%3A%20TAG%20%EB%AA%A9%EB%A1%9D%20%EB%B0%98%ED%99%98%0A%20%20%20%20S-%3E%3ES%3A%20TAG%20%EC%B2%B4%EC%9D%B8%20%EA%B2%80%EC%A6%9D%0A%20%20%20%20alt%20TAG%20%EC%B2%B4%EC%9D%B8%20%EC%9C%A0%ED%9A%A8%0A%20%20%20%20%20%20%20%20S-%3E%3ER%3A%20%22%E2%9C%85%20%EC%B6%94%EC%A0%81%EC%84%B1%20%ED%99%95%EC%9D%B8%20%EB%A6%AC%ED%8F%AC%ED%8A%B8%22%0A%20%20%20%20%20%20%20%20R-%3E%3ED%3A%20%EB%8F%99%EA%B8%B0%ED%99%94%20%EC%99%84%EB%A3%8C%0A%20%20%20%20else%20TAG%20%EC%B2%B4%EC%9D%B8%20%EB%81%8A%EA%B9%80%0A%20%20%20%20%20%20%20%20S-%3E%3ER%3A%20%22%E2%9D%8C%20%EB%88%84%EB%9D%BD%EB%90%9C%20TAG%20%EB%A6%AC%ED%8F%AC%ED%8A%B8%22%0A%20%20%20%20%20%20%20%20R-%3E%3ED%3A%20%EC%88%98%EC%A0%95%20%ED%95%84%EC%9A%94%20%ED%95%AD%EB%AA%A9%20%ED%91%9C%EC%8B%9C%0A%20%20%20%20%20%20%20%20D-%3E%3ECODE%3A%20TAG%20%EC%88%98%EC%A0%95%0A%20%20%20%20end%0A"})]),fallback:i(()=>[...s[2]||(s[2]=[a(" Loading... ",-1)])]),_:1})),s[9]||(s[9]=h(`<h2 id="폐기-tag-관리" tabindex="-1">폐기 TAG 관리 <a class="header-anchor" href="#폐기-tag-관리" aria-label="Permalink to &quot;폐기 TAG 관리&quot;">​</a></h2><p>더 이상 사용하지 않는 TAG는 코드에서 제거하거나 DEPRECATED 표시:</p><h3 id="옵션-1-완전-제거-권장" tabindex="-1">옵션 1: 완전 제거 (권장) <a class="header-anchor" href="#옵션-1-완전-제거-권장" aria-label="Permalink to &quot;옵션 1: 완전 제거 (권장)&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// TAG BLOCK 전체 제거</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// class OldAuthService {</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 코드도 제거</span></span></code></pre></div><h3 id="옵션-2-deprecated-표시" tabindex="-1">옵션 2: DEPRECATED 표시 <a class="header-anchor" href="#옵션-2-deprecated-표시" aria-label="Permalink to &quot;옵션 2: DEPRECATED 표시&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @CODE:OLD-AUTH-001:DEPRECATED (2025-01-15: AUTH-002로 대체됨)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 마이그레이션 가이드: docs/migration/auth-v2.md</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LegacyAuthService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 코드 유지 (하위 호환성)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="올바른-tag-사용-패턴" tabindex="-1">올바른 TAG 사용 패턴 <a class="header-anchor" href="#올바른-tag-사용-패턴" aria-label="Permalink to &quot;올바른 TAG 사용 패턴&quot;">​</a></h2><h3 id="✅-권장-패턴" tabindex="-1">✅ 권장 패턴 <a class="header-anchor" href="#✅-권장-패턴" aria-label="Permalink to &quot;✅ 권장 패턴&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @CODE:AUTH-001 | SPEC: SPEC-AUTH-001.md | TEST: tests/auth/service.test.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @CODE:AUTH-001: JWT 인증 서비스</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * TDD 이력:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * - RED: tests/auth/service.test.ts 작성</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * - GREEN: 최소 구현</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * - REFACTOR: 타입 안전성 추가</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AuthService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // @CODE:AUTH-001:API: 인증 엔드포인트</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  async</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> authenticate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">username</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">password</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Implementation...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="❌-금지-패턴" tabindex="-1">❌ 금지 패턴 <a class="header-anchor" href="#❌-금지-패턴" aria-label="Permalink to &quot;❌ 금지 패턴&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @TEST:AUTH-001 -&gt; @CODE:AUTH-001    ❌ 순서 표기 불필요 (파일 위치로 구분)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @CODE:AUTH-001, @CODE:AUTH-002      ❌ 하나의 파일에 여러 ID (분리 필요)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @SPEC:AUTH-001                         ❌ 레거시 TAG (사용 금지)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @CODE:AUTH-001                     ❌ 레거시 TAG (사용 금지)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @CODE:ABC-123                        ❌ 의미 없는 도메인명</span></span></code></pre></div><h2 id="tdd-워크플로우-체크리스트" tabindex="-1">TDD 워크플로우 체크리스트 <a class="header-anchor" href="#tdd-워크플로우-체크리스트" aria-label="Permalink to &quot;TDD 워크플로우 체크리스트&quot;">​</a></h2><h3 id="_1단계-spec-작성-alfred-1-spec" tabindex="-1">1단계: SPEC 작성 (<code>/alfred:1-spec</code>) <a class="header-anchor" href="#_1단계-spec-작성-alfred-1-spec" aria-label="Permalink to &quot;1단계: SPEC 작성 (\`/alfred:1-spec\`)&quot;">​</a></h3><ul><li>[ ] <code>.moai/specs/SPEC-&lt;ID&gt;.md</code> 생성</li><li>[ ] <code>@SPEC:ID</code> TAG 포함</li><li>[ ] EARS 구문으로 요구사항 작성</li><li>[ ] 중복 ID 확인: <code>rg &quot;@SPEC:&lt;ID&gt;&quot; -n</code></li></ul><h3 id="_2단계-tdd-구현-alfred-2-build" tabindex="-1">2단계: TDD 구현 (<code>/alfred:2-build</code>) <a class="header-anchor" href="#_2단계-tdd-구현-alfred-2-build" aria-label="Permalink to &quot;2단계: TDD 구현 (\`/alfred:2-build\`)&quot;">​</a></h3><ul><li>[ ] <strong>RED</strong>: <code>tests/</code> 디렉토리에 <code>@TEST:ID</code> 작성 및 실패 확인</li><li>[ ] <strong>GREEN</strong>: <code>src/</code> 디렉토리에 <code>@CODE:ID</code> 작성 및 테스트 통과</li><li>[ ] <strong>REFACTOR</strong>: 코드 품질 개선, TDD 이력 주석 추가</li><li>[ ] TAG BLOCK에 SPEC/TEST 파일 경로 명시</li></ul><h3 id="_3단계-문서-동기화-alfred-3-sync" tabindex="-1">3단계: 문서 동기화 (<code>/alfred:3-sync</code>) <a class="header-anchor" href="#_3단계-문서-동기화-alfred-3-sync" aria-label="Permalink to &quot;3단계: 문서 동기화 (\`/alfred:3-sync\`)&quot;">​</a></h3><ul><li>[ ] 전체 TAG 스캔: <code>rg &#39;@(SPEC|TEST|CODE):&#39; -n</code></li><li>[ ] 고아 TAG 없음 확인</li><li>[ ] Living Document 자동 생성 확인</li><li>[ ] PR 상태 Draft → Ready 전환</li></ul><h2 id="실전-워크플로우" tabindex="-1">실전 워크플로우 <a class="header-anchor" href="#실전-워크플로우" aria-label="Permalink to &quot;실전 워크플로우&quot;">​</a></h2>`,19)),(n(),p(k,null,{default:i(()=>[e(l,{id:"mermaid-530",class:"mermaid my-class",graph:"graph%20TD%0A%20%20%20%20A%5B%221.%20SPEC%20%EC%9E%91%EC%84%B1%3Cbr%2F%3E%2Falfred%3A1-spec%3Cbr%2F%3E%40SPEC%3AID%22%5D%20--%3E%20B%5B%222.%20%ED%85%8C%EC%8A%A4%ED%8A%B8%20%EC%9E%91%EC%84%B1%3Cbr%2F%3ERED%20Phase%3Cbr%2F%3E%40TEST%3AID%22%5D%0A%20%20%20%20B%20--%3E%20C%5B%223.%20%EA%B5%AC%ED%98%84%3Cbr%2F%3EGREEN%20Phase%3Cbr%2F%3E%40CODE%3AID%22%5D%0A%20%20%20%20C%20--%3E%20D%5B%224.%20%EB%A6%AC%ED%8C%A9%ED%86%A0%EB%A7%81%3Cbr%2F%3EREFACTOR%20Phase%3Cbr%2F%3E%40CODE%3AID%20%EA%B0%9C%EC%84%A0%22%5D%0A%20%20%20%20D%20--%3E%20E%7B%225.%20%2Falfred%3A3-sync%3Cbr%2F%3E%EC%BD%94%EB%93%9C%20%EC%8A%A4%EC%BA%94%20%EA%B2%80%EC%A6%9D%22%7D%0A%20%20%20%20E%20--%3E%7C%EC%84%B1%EA%B3%B5%7C%20F%5B%22%EC%B6%94%EC%A0%81%EC%84%B1%20%ED%99%95%EB%B3%B4%3Cbr%2F%3E%40DOC%3AID%20%EC%83%9D%EC%84%B1%22%5D%0A%20%20%20%20E%20--%3E%7C%EC%8B%A4%ED%8C%A8%7C%20G%5B%22TAG%20%EC%88%98%EC%A0%95%20%ED%95%84%EC%9A%94%3Cbr%2F%3E%EB%88%84%EB%9D%BD%2F%EC%A4%91%EB%B3%B5%2F%EC%88%9C%EC%84%9C%20%EC%98%A4%EB%A5%98%22%5D%0A%20%20%20%20G%20--%3E%20B%0A%0A"})]),fallback:i(()=>[...s[3]||(s[3]=[a(" Loading... ",-1)])]),_:1})),s[10]||(s[10]=h('<h2 id="code-first-원칙-요약" tabindex="-1">CODE-FIRST 원칙 요약 <a class="header-anchor" href="#code-first-원칙-요약" aria-label="Permalink to &quot;CODE-FIRST 원칙 요약&quot;">​</a></h2><ol><li><strong>코드가 진실의 유일한 원천</strong>: 별도 인덱스 파일 미사용</li><li><strong>실시간 스캔 검증</strong>: <code>rg</code> 명령어로 코드 직접 스캔</li><li><strong>중간 캐시 없음</strong>: 항상 코드에서 직접 TAG 추출</li><li><strong>@TAG 단순화</strong>: @SPEC → @TEST → @CODE → @DOC (50% 감소)</li><li><strong>TDD 완벽 정렬</strong>: RED (TEST) → GREEN (CODE) → REFACTOR (CODE + DOC)</li><li><strong>TAG BLOCK 필수</strong>: 모든 코드 파일 상단에 배치</li></ol><h2 id="다음-단계" tabindex="-1">다음 단계 <a class="header-anchor" href="#다음-단계" aria-label="Permalink to &quot;다음 단계&quot;">​</a></h2><ul><li><a href="/guide/workflow.html">3단계 워크플로우</a> - 전체 개발 프로세스 이해</li><li><a href="/guide/spec-first-tdd.html">SPEC 우선 TDD</a> - TDD 사이클과 TAG 통합</li><li><a href="/cli/init.html">CLI 명령어</a> - <code>moai</code> 명령어로 TAG 관리 자동화</li><li><a href="/.moai/memory/development-guide.html">개발 가이드</a> - TRUST 원칙과 TAG 시스템</li></ul>',4))])}const T=r(g,[["render",c]]);export{u as __pageData,T as default};
