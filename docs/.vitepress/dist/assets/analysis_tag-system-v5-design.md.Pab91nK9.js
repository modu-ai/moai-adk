import{_ as p,C as l,c as e,o as a,a3 as i,b as h,w as n,a as k,G as r,a4 as d}from"./chunks/framework.L7k57l8l.js";const u=JSON.parse('{"title":"TAG 시스템 설계 문서","description":"","frontmatter":{},"headers":[],"relativePath":"analysis/tag-system-v5-design.md","filePath":"analysis/tag-system-v5-design.md"}'),E={name:"analysis/tag-system-v5-design.md"};function c(g,s,o,y,F,A){const t=l("Mermaid");return a(),e("div",null,[s[1]||(s[1]=i(`<h1 id="tag-시스템-설계-문서" tabindex="-1">TAG 시스템 설계 문서 <a class="header-anchor" href="#tag-시스템-설계-문서" aria-label="Permalink to &quot;TAG 시스템 설계 문서&quot;">​</a></h1><blockquote><p><strong>상태</strong>: 구현 완료 <strong>적용 대상</strong>: MoAI-ADK v0.0.2+</p></blockquote><hr><h2 id="📊-변경-요약" tabindex="-1">📊 변경 요약 <a class="header-anchor" href="#📊-변경-요약" aria-label="Permalink to &quot;📊 변경 요약&quot;">​</a></h2><h3 id="tag-체계-단순화" tabindex="-1">TAG 체계 단순화 <a class="header-anchor" href="#tag-체계-단순화" aria-label="Permalink to &quot;TAG 체계 단순화&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Before (이전 버전):</span></span>
<span class="line"><span>Primary: @REQ, @DESIGN, @TASK, @TEST</span></span>
<span class="line"><span>Implementation: @FEATURE, @API, @UI, @DATA 서브카테고리</span></span>
<span class="line"><span></span></span>
<span class="line"><span>After (현재 버전):</span></span>
<span class="line"><span>@SPEC → @TEST → @CODE → @DOC</span></span></code></pre></div><p><strong>단순화율</strong>: 8개 → 4개 (50% 감소) <strong>개선 효과</strong>: 65/100 → 92/100 (27점 향상)</p><hr><h2 id="🎯-핵심-철학" tabindex="-1">🎯 핵심 철학 <a class="header-anchor" href="#🎯-핵심-철학" aria-label="Permalink to &quot;🎯 핵심 철학&quot;">​</a></h2><h3 id="_1-tdd-사이클과-완벽-정렬" tabindex="-1">1. TDD 사이클과 완벽 정렬 <a class="header-anchor" href="#_1-tdd-사이클과-완벽-정렬" aria-label="Permalink to &quot;1. TDD 사이클과 완벽 정렬&quot;">​</a></h3>`,10)),(a(),h(d,null,{default:n(()=>[r(t,{id:"mermaid-26",class:"mermaid my-class",graph:"graph%20LR%0A%20%20%20%20SPEC%5B%22%40SPEC%3Cbr%2F%3E%EB%AA%85%EC%84%B8%22%5D%20--%3E%20RED%5B%22%40TEST%3Cbr%2F%3ERED%20Phase%22%5D%0A%20%20%20%20RED%20--%3E%20GREEN%5B%22%40CODE%3Cbr%2F%3EGREEN%20Phase%22%5D%0A%20%20%20%20GREEN%20--%3E%20REFACTOR%5B%22%40CODE%3Cbr%2F%3EREFACTOR%20Phase%22%5D%0A%20%20%20%20REFACTOR%20--%3E%20DOC%5B%22%40DOC%3Cbr%2F%3E%EB%AC%B8%EC%84%9C%ED%99%94%22%5D%0A%20%20%20%20DOC%20--%3E%20SPEC%0A%0A"})]),fallback:n(()=>[...s[0]||(s[0]=[k(" Loading... ",-1)])]),_:1})),s[2]||(s[2]=i(`<h3 id="_2-code-first-원칙-유지" tabindex="-1">2. CODE-FIRST 원칙 유지 <a class="header-anchor" href="#_2-code-first-원칙-유지" aria-label="Permalink to &quot;2. CODE-FIRST 원칙 유지&quot;">​</a></h3><ul><li>TAG의 진실은 코드 자체에만 존재</li><li><code>rg &#39;@TAG&#39; -n</code> 실시간 스캔</li><li>중간 캐시/인덱스 없음</li></ul><h3 id="_3-단순성-최우선" tabindex="-1">3. 단순성 최우선 <a class="header-anchor" href="#_3-단순성-최우선" aria-label="Permalink to &quot;3. 단순성 최우선&quot;">​</a></h3><ul><li>4개 TAG만으로 전체 개발 사이클 표현</li><li>개발자 인지 부하 최소화</li><li>자동화 용이</li></ul><hr><h2 id="🏗️-tag-체계-상세-설계" tabindex="-1">🏗️ TAG 체계 상세 설계 <a class="header-anchor" href="#🏗️-tag-체계-상세-설계" aria-label="Permalink to &quot;🏗️ TAG 체계 상세 설계&quot;">​</a></h2><h3 id="spec-id-spec-문서" tabindex="-1">@SPEC:ID - SPEC 문서 <a class="header-anchor" href="#spec-id-spec-문서" aria-label="Permalink to &quot;@SPEC:ID - SPEC 문서&quot;">​</a></h3><p><strong>역할</strong>: 요구사항 명세 및 설계 (EARS 방법론)</p><p><strong>위치</strong>: <code>.moai/specs/SPEC-&lt;ID&gt;.md</code></p><p><strong>내용</strong>:</p><ul><li>EARS 5가지 요구사항</li><li>아키텍처 설계</li><li>인터페이스 정의</li><li>제약 조건</li></ul><p><strong>예시</strong>:</p><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;"># SPEC-AUTH-001: 사용자 JWT 인증</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">## @SPEC:AUTH-001</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">### Ubiquitous Requirements</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 시스템은 JWT 기반 인증을 제공해야 한다</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">### Event-driven Requirements</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WHEN 유효한 자격증명이 제공되면, 시스템은 JWT 토큰을 발급해야 한다</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WHEN 토큰이 만료되면, 시스템은 401 Unauthorized를 반환해야 한다</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">### Constraints</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 토큰 만료시간은 15분을 초과하지 않아야 한다</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 비밀번호는 bcrypt (cost factor: 12)로 해싱해야 한다</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">## 설계</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">### 아키텍처</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AuthService: 인증 로직</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TokenService: JWT 생성/검증</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UserRepository: 사용자 데이터 조회</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">### 인터페이스</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\`\`\`typescript</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AuthService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  authenticate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">username</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">password</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AuthResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>---</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### @TEST:ID - 테스트 코드</span></span>
<span class="line"><span></span></span>
<span class="line"><span>**역할**: TDD RED Phase (실패 테스트) + 검증</span></span>
<span class="line"><span></span></span>
<span class="line"><span>**위치**: \`tests/\`, \`__tests__/\`, \`*.test.ts\`, \`*.spec.py\` 등</span></span>
<span class="line"><span></span></span>
<span class="line"><span>**내용**:</span></span>
<span class="line"><span>- 단위 테스트</span></span>
<span class="line"><span>- 통합 테스트</span></span>
<span class="line"><span>- E2E 테스트</span></span>
<span class="line"><span></span></span>
<span class="line"><span>**TDD 플로우**:</span></span>
<span class="line"><span>1. **RED**: @TEST 작성 → 실패 확인</span></span>
<span class="line"><span>2. **GREEN**: @CODE 작성 → 통과 확인</span></span>
<span class="line"><span>3. **REFACTOR**: @CODE 개선 → 테스트 유지</span></span>
<span class="line"><span></span></span>
<span class="line"><span>**예시**:</span></span>
<span class="line"><span>\`\`\`typescript</span></span>
<span class="line"><span>// tests/auth/auth.service.test.ts</span></span>
<span class="line"><span>// @TEST:AUTH-001 | SPEC: SPEC-AUTH-001.md | CODE: src/auth/service.ts</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import { describe, test, expect, beforeEach } from &#39;vitest&#39;;</span></span>
<span class="line"><span>import { AuthService } from &#39;@/auth/service&#39;;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>describe(&#39;@TEST:AUTH-001: JWT 인증&#39;, () =&gt; {</span></span>
<span class="line"><span>  let authService: AuthService;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  beforeEach(() =&gt; {</span></span>
<span class="line"><span>    authService = new AuthService();</span></span>
<span class="line"><span>  });</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  test(&#39;유효한 자격증명으로 인증 시 토큰 반환&#39;, async () =&gt; {</span></span>
<span class="line"><span>    // @TEST:AUTH-001-01: 성공 케이스</span></span>
<span class="line"><span>    const result = await authService.authenticate(&#39;user&#39;, &#39;password123&#39;);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    expect(result.success).toBe(true);</span></span>
<span class="line"><span>    expect(result.token).toBeDefined();</span></span>
<span class="line"><span>    expect(result.token).toMatch(/^eyJ[A-Za-z0-9-_]+\\./); // JWT 형식</span></span>
<span class="line"><span>  });</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  test(&#39;잘못된 자격증명으로 인증 시 실패&#39;, async () =&gt; {</span></span>
<span class="line"><span>    // @TEST:AUTH-001-02: 실패 케이스</span></span>
<span class="line"><span>    const result = await authService.authenticate(&#39;user&#39;, &#39;wrong&#39;);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    expect(result.success).toBe(false);</span></span>
<span class="line"><span>    expect(result.error).toBe(&#39;Invalid credentials&#39;);</span></span>
<span class="line"><span>  });</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  test(&#39;토큰 만료 시간 15분 이하&#39;, async () =&gt; {</span></span>
<span class="line"><span>    // @TEST:AUTH-001-03: 제약 조건 검증</span></span>
<span class="line"><span>    const result = await authService.authenticate(&#39;user&#39;, &#39;password123&#39;);</span></span>
<span class="line"><span>    const decoded = jwt.decode(result.token!) as any;</span></span>
<span class="line"><span>    const expiry = decoded.exp - decoded.iat;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    expect(expiry).toBeLessThanOrEqual(900); // 15분 = 900초</span></span>
<span class="line"><span>  });</span></span>
<span class="line"><span>});</span></span></code></pre></div><hr><h3 id="code-id-구현-코드" tabindex="-1">@CODE:ID - 구현 코드 <a class="header-anchor" href="#code-id-구현-코드" aria-label="Permalink to &quot;@CODE:ID - 구현 코드&quot;">​</a></h3><p><strong>역할</strong>: TDD GREEN + REFACTOR Phase (실제 구현)</p><p><strong>위치</strong>: <code>src/</code>, <code>lib/</code>, 프로젝트 소스 디렉토리</p><p><strong>내용</strong>:</p><ul><li>GREEN Phase: 최소 구현 (테스트 통과)</li><li>REFACTOR Phase: 품질 개선 (타입 안전성, 성능, 가독성)</li></ul><p><strong>하위 분류 (주석으로 표현)</strong>:</p><ul><li><code>@CODE:ID</code> - 전체 구현</li><li><code>@CODE:ID:API</code> - API 엔드포인트</li><li><code>@CODE:ID:UI</code> - UI 컴포넌트</li><li><code>@CODE:ID:DATA</code> - 데이터 모델</li><li><code>@CODE:ID:DOMAIN</code> - 도메인 로직</li><li><code>@CODE:ID:REFACTOR</code> - 리팩토링 마커</li></ul><p><strong>예시</strong>:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// src/auth/service.ts</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @CODE:AUTH-001 | SPEC: SPEC-AUTH-001.md | TEST: tests/auth/auth.service.test.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bcrypt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;bcrypt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jwt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;jsonwebtoken&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { UserRepository } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@/user/repository&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @CODE:AUTH-001: JWT 인증 서비스</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * TDD 이력:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * - RED: tests/auth/auth.service.test.ts 작성</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * - GREEN: 최소 구현 (bcrypt, JWT)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * - REFACTOR: 타입 안전성 추가, 에러 처리 개선</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AuthService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> userRepository</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UserRepository</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> jwtSecret</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ) {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   * @CODE:AUTH-001:API: 사용자 인증 API</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  async</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> authenticate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    username</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    password</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  )</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AuthResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // @CODE:AUTH-001:DOMAIN: 입력 검증</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">validateInput</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(username, password);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // @CODE:AUTH-001:DATA: 사용자 조회</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> user</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.userRepository.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">findByUsername</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(username);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">user) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">failureResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // @CODE:AUTH-001:DOMAIN: 비밀번호 검증</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> isValid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bcrypt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compare</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(password, user.passwordHash);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">isValid) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">failureResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // @CODE:AUTH-001:API: JWT 토큰 생성</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> token</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jwt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sign</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      { userId: user.id, username: user.username },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.jwtSecret,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      { algorithm: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;HS256&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, expiresIn: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;15m&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// SPEC 제약: 15분</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    );</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { success: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, token };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // @CODE:AUTH-001:REFACTOR: 리팩토링 - 공통 로직 추출</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> validateInput</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">username</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">password</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">password) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ValidationError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Username and password required&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> failureResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AuthResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { success: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, error: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Invalid credentials&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @CODE:AUTH-001:DATA: 인증 결과 타입</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AuthResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  success</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  token</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  error</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><hr><h3 id="doc-id-living-document" tabindex="-1">@DOC:ID - Living Document <a class="header-anchor" href="#doc-id-living-document" aria-label="Permalink to &quot;@DOC:ID - Living Document&quot;">​</a></h3><p><strong>역할</strong>: 자동 생성 문서 및 수동 문서</p><p><strong>위치</strong>: <code>README.md</code>, <code>docs/</code>, <code>API.md</code> 등</p><p><strong>내용</strong>:</p><ul><li>README.md: 프로젝트 개요</li><li>API 문서: 엔드포인트 설명</li><li>사용 가이드: 예시 코드</li><li>CHANGELOG: 변경 이력</li></ul><p><strong>자동 생성</strong>: <code>/alfred:3-sync</code> 실행 시</p><p><strong>예시</strong>:</p><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- README.md --&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- @DOC:AUTH-001: 인증 시스템 문서 --&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;"># 인증 시스템</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">## 개요</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">JWT 기반 사용자 인증을 제공합니다.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">## 사용법</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\`\`\`typescript</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { AuthService } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@/auth/service&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> authService</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AuthService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(userRepo, process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JWT_SECRET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> authService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">authenticate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;password&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (result.success) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Token:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, result.token);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Error:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, result.error);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="api-레퍼런스" tabindex="-1">API 레퍼런스 <a class="header-anchor" href="#api-레퍼런스" aria-label="Permalink to &quot;API 레퍼런스&quot;">​</a></h2><h3 id="authenticate-username-password" tabindex="-1"><code>authenticate(username, password)</code> <a class="header-anchor" href="#authenticate-username-password" aria-label="Permalink to &quot;\`authenticate(username, password)\`&quot;">​</a></h3><p><strong>설명</strong>: 사용자 인증 및 JWT 토큰 발급</p><p><strong>파라미터</strong>:</p><ul><li><code>username: string</code> - 사용자 이름</li><li><code>password: string</code> - 비밀번호</li></ul><p><strong>반환값</strong>: <code>Promise&lt;AuthResult&gt;</code></p><p><strong>예시</strong>: 위 사용법 참조</p><p><strong>관련</strong>: SPEC-AUTH-001, 테스트: tests/auth/auth.service.test.ts</p><hr><h2 id="spec-문서" tabindex="-1">SPEC 문서 <a class="header-anchor" href="#spec-문서" aria-label="Permalink to &quot;SPEC 문서&quot;">​</a></h2><p>전체 명세는 <a href="./../.moai/specs/SPEC-AUTH-001.html">SPEC-AUTH-001.md</a>을 참조하세요.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>---</span></span>
<span class="line"><span></span></span>
<span class="line"><span>## 🔗 TAG 체인</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### 기본 체인</span></span></code></pre></div><p>@SPEC:ID → @TEST:ID → @CODE:ID → @DOC:ID</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>**흐름**:</span></span>
<span class="line"><span>1. **@SPEC:ID**: 요구사항 작성 (\`/alfred:1-spec\`)</span></span>
<span class="line"><span>2. **@TEST:ID**: 테스트 작성 (TDD RED)</span></span>
<span class="line"><span>3. **@CODE:ID**: 구현 작성 (TDD GREEN → REFACTOR)</span></span>
<span class="line"><span>4. **@DOC:ID**: 문서 생성 (\`/alfred:3-sync\`)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### TAG BLOCK 템플릿</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#### SPEC 문서</span></span>
<span class="line"><span>\`\`\`markdown</span></span>
<span class="line"><span># SPEC-AUTH-001: 사용자 JWT 인증</span></span>
<span class="line"><span></span></span>
<span class="line"><span>## @SPEC:AUTH-001</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[요구사항 내용...]</span></span></code></pre></div><h4 id="테스트-파일" tabindex="-1">테스트 파일 <a class="header-anchor" href="#테스트-파일" aria-label="Permalink to &quot;테스트 파일&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @TEST:AUTH-001 | SPEC: SPEC-AUTH-001.md | CODE: src/auth/service.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">describe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;@TEST:AUTH-001: JWT 인증&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 테스트 케이스...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h4 id="코드-파일" tabindex="-1">코드 파일 <a class="header-anchor" href="#코드-파일" aria-label="Permalink to &quot;코드 파일&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @CODE:AUTH-001 | SPEC: SPEC-AUTH-001.md | TEST: tests/auth/auth.service.test.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AuthService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 구현...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="문서-파일" tabindex="-1">문서 파일 <a class="header-anchor" href="#문서-파일" aria-label="Permalink to &quot;문서 파일&quot;">​</a></h4><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- @DOC:AUTH-001: 인증 시스템 문서 --&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;"># 인증 시스템</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[문서 내용...]</span></span></code></pre></div><hr><h2 id="🎨-하위-분류-선택적" tabindex="-1">🎨 하위 분류 (선택적) <a class="header-anchor" href="#🎨-하위-분류-선택적" aria-label="Permalink to &quot;🎨 하위 분류 (선택적)&quot;">​</a></h2><p>@CODE 내에서 세부 역할을 주석으로 표현 (선택적):</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @CODE:AUTH-001:API - API 엔드포인트</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @CODE:AUTH-001:UI - UI 컴포넌트</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @CODE:AUTH-001:DATA - 데이터 모델</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @CODE:AUTH-001:DOMAIN - 도메인 로직</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @CODE:AUTH-001:INFRA - 인프라 레이어</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @CODE:AUTH-001:UTIL - 유틸리티</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @CODE:AUTH-001:CONFIG - 설정</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @CODE:AUTH-001:REFACTOR - 리팩토링 마커</span></span></code></pre></div><p><strong>특징</strong>:</p><ul><li>메인 TAG는 4개 유지</li><li>세부 분류는 주석 레벨에서 표현</li><li>프로젝트 특성에 맞게 선택적 사용</li></ul><hr><h2 id="🔍-코드-스캔-및-검증" tabindex="-1">🔍 코드 스캔 및 검증 <a class="header-anchor" href="#🔍-코드-스캔-및-검증" aria-label="Permalink to &quot;🔍 코드 스캔 및 검증&quot;">​</a></h2><h3 id="기본-스캔" tabindex="-1">기본 스캔 <a class="header-anchor" href="#기본-스캔" aria-label="Permalink to &quot;기본 스캔&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 모든 TAG 찾기</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@SPEC:|@TEST:|@CODE:|@DOC:&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 특정 ID의 전체 체인 찾기</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;AUTH-001&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># SPEC → TEST → CODE → DOC 체인 확인</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@SPEC:AUTH-001&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .moai/specs/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@TEST:AUTH-001&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tests/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@CODE:AUTH-001&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@DOC:AUTH-001&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> README.md</span></span></code></pre></div><h3 id="무결성-검증-alfred-3-sync" tabindex="-1">무결성 검증 (<code>/alfred:3-sync</code>) <a class="header-anchor" href="#무결성-검증-alfred-3-sync" aria-label="Permalink to &quot;무결성 검증 (\`/alfred:3-sync\`)&quot;">​</a></h3><ol><li><strong>SPEC 존재 확인</strong>: 모든 @TEST는 @SPEC 참조</li><li><strong>TEST 존재 확인</strong>: 모든 @CODE는 @TEST 참조</li><li><strong>고아 TAG 탐지</strong>: SPEC 없는 @CODE 식별</li><li><strong>체인 완결성</strong>: SPEC → TEST → CODE 연결 확인</li></ol><hr><h2 id="📊-개선-효과-비교" tabindex="-1">📊 개선 효과 비교 <a class="header-anchor" href="#📊-개선-효과-비교" aria-label="Permalink to &quot;📊 개선 효과 비교&quot;">​</a></h2><table tabindex="0"><thead><tr><th>항목</th><th>이전 버전</th><th>현재 버전</th><th>개선</th></tr></thead><tbody><tr><td><strong>TAG 개수</strong></td><td>8개</td><td>4개</td><td>✅ 50% 감소</td></tr><tr><td><strong>TDD 정렬</strong></td><td>60/100</td><td>95/100</td><td>✅ +35</td></tr><tr><td><strong>SPEC 매핑</strong></td><td>50/100</td><td>90/100</td><td>✅ +40</td></tr><tr><td><strong>추적성</strong></td><td>85/100</td><td>95/100</td><td>✅ +10</td></tr><tr><td><strong>단순성</strong></td><td>55/100</td><td>95/100</td><td>✅ +40</td></tr><tr><td><strong>사용성</strong></td><td>65/100</td><td>90/100</td><td>✅ +25</td></tr><tr><td><strong>완전성</strong></td><td>70/100</td><td>85/100</td><td>✅ +15</td></tr><tr><td><strong>종합</strong></td><td><strong>65/100</strong></td><td><strong>92/100</strong></td><td><strong>✅ +27</strong></td></tr></tbody></table><hr><h2 id="🚀-마이그레이션-가이드" tabindex="-1">🚀 마이그레이션 가이드 <a class="header-anchor" href="#🚀-마이그레이션-가이드" aria-label="Permalink to &quot;🚀 마이그레이션 가이드&quot;">​</a></h2><h3 id="tag-매핑-규칙" tabindex="-1">TAG 매핑 규칙 <a class="header-anchor" href="#tag-매핑-규칙" aria-label="Permalink to &quot;TAG 매핑 규칙&quot;">​</a></h3><table tabindex="0"><thead><tr><th>이전 버전</th><th>현재 버전</th><th>비고</th></tr></thead><tbody><tr><td><code>@REQ:ID</code></td><td><code>@SPEC:ID</code></td><td>SPEC 문서에 통합</td></tr><tr><td><code>@DESIGN:ID</code></td><td><code>@SPEC:ID</code></td><td>SPEC 문서에 통합</td></tr><tr><td><code>@TASK:ID</code></td><td><code>@CODE:ID</code></td><td>구현 통합</td></tr><tr><td><code>@TEST:ID</code></td><td><code>@TEST:ID</code></td><td>동일</td></tr><tr><td><code>@FEATURE:ID</code></td><td><code>@CODE:ID</code></td><td>구현 통합</td></tr><tr><td><code>@API:ID</code></td><td><code>@CODE:ID:API</code></td><td>주석 레벨</td></tr><tr><td><code>@UI:ID</code></td><td><code>@CODE:ID:UI</code></td><td>주석 레벨</td></tr><tr><td><code>@DATA:ID</code></td><td><code>@CODE:ID:DATA</code></td><td>주석 레벨</td></tr></tbody></table><h3 id="자동-변환-스크립트" tabindex="-1">자동 변환 스크립트 <a class="header-anchor" href="#자동-변환-스크립트" aria-label="Permalink to &quot;자동 변환 스크립트&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># TAG 스캔 명령어</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 이전: rg &#39;@(REQ|DESIGN|TASK|TEST|FEATURE|API|UI|DATA):&#39; -n</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 현재: rg &#39;@(SPEC|TEST|CODE|DOC):&#39; -n</span></span></code></pre></div><h3 id="수동-변환-예시" tabindex="-1">수동 변환 예시 <a class="header-anchor" href="#수동-변환-예시" aria-label="Permalink to &quot;수동 변환 예시&quot;">​</a></h3><p><strong>Before (이전 버전):</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @TASK:AUTH-001 | Chain: @REQ:AUTH-001 -&gt; @DESIGN:AUTH-001 -&gt; @TASK:AUTH-001 -&gt; @TEST:AUTH-001</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Related: @FEATURE:AUTH-001, @API:AUTH-001</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AuthService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // @API:AUTH-001</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  authenticate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>After (현재 버전):</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @CODE:AUTH-001 | SPEC: SPEC-AUTH-001.md | TEST: tests/auth/auth.service.test.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AuthService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // @CODE:AUTH-001:API</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  authenticate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><hr><h2 id="🎯-실전-워크플로우" tabindex="-1">🎯 실전 워크플로우 <a class="header-anchor" href="#🎯-실전-워크플로우" aria-label="Permalink to &quot;🎯 실전 워크플로우&quot;">​</a></h2><h3 id="_1-spec-작성" tabindex="-1">1. SPEC 작성 <a class="header-anchor" href="#_1-spec-작성" aria-label="Permalink to &quot;1. SPEC 작성&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/alfred:1-spec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;사용자 JWT 인증&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 생성: .moai/specs/SPEC-AUTH-001.md</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 포함: @SPEC:AUTH-001</span></span></code></pre></div><h3 id="_2-tdd-red-phase" tabindex="-1">2. TDD RED Phase <a class="header-anchor" href="#_2-tdd-red-phase" aria-label="Permalink to &quot;2. TDD RED Phase&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// tests/auth/auth.service.test.ts</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @TEST:AUTH-001 | SPEC: SPEC-AUTH-001.md | CODE: src/auth/service.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">describe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;@TEST:AUTH-001: JWT 인증&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;유효한 자격증명으로 인증&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> authService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">authenticate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;password&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    expect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result.success).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toBe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>실행: <code>npm test</code> → ❌ 실패 확인</p><h3 id="_3-tdd-green-phase" tabindex="-1">3. TDD GREEN Phase <a class="header-anchor" href="#_3-tdd-green-phase" aria-label="Permalink to &quot;3. TDD GREEN Phase&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// src/auth/service.ts</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @CODE:AUTH-001 | SPEC: SPEC-AUTH-001.md | TEST: tests/auth/auth.service.test.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AuthService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  async</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> authenticate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">username</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">password</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 최소 구현</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;user&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> password </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;password&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { success: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, token: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;dummy-token&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { success: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>실행: <code>npm test</code> → ✅ 통과 확인</p><h3 id="_4-tdd-refactor-phase" tabindex="-1">4. TDD REFACTOR Phase <a class="header-anchor" href="#_4-tdd-refactor-phase" aria-label="Permalink to &quot;4. TDD REFACTOR Phase&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// @CODE:AUTH-001:REFACTOR: bcrypt, JWT 적용</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AuthService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  async</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> authenticate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">username</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">password</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // @CODE:AUTH-001:DOMAIN: 입력 검증</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">validateInput</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(username, password);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // @CODE:AUTH-001:DATA: 사용자 조회</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> user</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.userRepository.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">findByUsername</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(username);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // @CODE:AUTH-001:DOMAIN: bcrypt 검증</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> isValid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bcrypt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compare</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(password, user.passwordHash);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // @CODE:AUTH-001:API: JWT 생성</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> token</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jwt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sign</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ userId: user.id }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.jwtSecret);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { success: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, token };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>실행: <code>npm test</code> → ✅ 통과 유지</p><h3 id="_5-문서-생성" tabindex="-1">5. 문서 생성 <a class="header-anchor" href="#_5-문서-생성" aria-label="Permalink to &quot;5. 문서 생성&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/alfred:3-sync</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 자동 생성:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># - README.md에 @DOC:AUTH-001 섹션 추가</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># - API 문서 갱신</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># - CHANGELOG 업데이트</span></span></code></pre></div><hr><h2 id="🛡️-trust-원칙-통합" tabindex="-1">🛡️ TRUST 원칙 통합 <a class="header-anchor" href="#🛡️-trust-원칙-통합" aria-label="Permalink to &quot;🛡️ TRUST 원칙 통합&quot;">​</a></h2><h3 id="t-test-first" tabindex="-1">T - Test First <a class="header-anchor" href="#t-test-first" aria-label="Permalink to &quot;T - Test First&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@TEST:ID → @CODE:ID (테스트 먼저 작성)</span></span></code></pre></div><h3 id="r-readable" tabindex="-1">R - Readable <a class="header-anchor" href="#r-readable" aria-label="Permalink to &quot;R - Readable&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@CODE:ID 내 명확한 주석 (API, DOMAIN, DATA 등)</span></span></code></pre></div><h3 id="u-unified" tabindex="-1">U - Unified <a class="header-anchor" href="#u-unified" aria-label="Permalink to &quot;U - Unified&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@SPEC:ID에 아키텍처 명시</span></span>
<span class="line"><span>@CODE:ID에서 준수</span></span></code></pre></div><h3 id="s-secured" tabindex="-1">S - Secured <a class="header-anchor" href="#s-secured" aria-label="Permalink to &quot;S - Secured&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@CODE:ID:SECURITY 주석으로 보안 로직 표시</span></span></code></pre></div><h3 id="t-trackable" tabindex="-1">T - Trackable <a class="header-anchor" href="#t-trackable" aria-label="Permalink to &quot;T - Trackable&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>TAG 체인: @SPEC → @TEST → @CODE → @DOC</span></span></code></pre></div><hr><h2 id="📚-참고-자료" tabindex="-1">📚 참고 자료 <a class="header-anchor" href="#📚-참고-자료" aria-label="Permalink to &quot;📚 참고 자료&quot;">​</a></h2><ul><li><a href="/guide/spec-first-tdd.html">TDD Red-Green-Refactor 가이드</a></li><li><a href="/guide/spec-first-tdd.html#ears">EARS 요구사항 작성법</a></li><li><a href="/guide/workflow.html#moai3-sync">코드 스캔 기반 검증</a></li></ul><hr><h2 id="🔚-결론" tabindex="-1">🔚 결론 <a class="header-anchor" href="#🔚-결론" aria-label="Permalink to &quot;🔚 결론&quot;">​</a></h2><p><strong>현재 TAG 시스템의 특징:</strong></p><ul><li>✅ TDD 사이클과 완벽 정렬 (RED → GREEN → REFACTOR)</li><li>✅ 단순성 극대화 (8개 → 4개)</li><li>✅ 중복 제거 (통합된 @CODE)</li><li>✅ SPEC 중심 설계</li><li>✅ CODE-FIRST 원칙 유지</li></ul><p><strong>개선 효과</strong>: 65/100 → 92/100 (+27점)</p><hr><p><strong>최종 수정</strong>: 2025-10-01 <strong>적용 버전</strong>: MoAI-ADK v0.0.2+</p>`,116))])}const C=p(E,[["render",c]]);export{u as __pageData,C as default};
