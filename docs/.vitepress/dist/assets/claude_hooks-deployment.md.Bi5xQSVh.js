import{_ as a,c as i,o as n,a3 as t}from"./chunks/framework.L7k57l8l.js";const c=JSON.parse('{"title":"MoAI-ADK Hooks 배포 전략","description":"","frontmatter":{},"headers":[],"relativePath":"claude/hooks-deployment.md","filePath":"claude/hooks-deployment.md"}'),e={name:"claude/hooks-deployment.md"};function l(p,s,h,o,d,k){return n(),i("div",null,[...s[0]||(s[0]=[t(`<h1 id="moai-adk-hooks-배포-전략" tabindex="-1">MoAI-ADK Hooks 배포 전략 <a class="header-anchor" href="#moai-adk-hooks-배포-전략" aria-label="Permalink to &quot;MoAI-ADK Hooks 배포 전략&quot;">​</a></h1><h2 id="🎯-설계-목표" tabindex="-1">🎯 설계 목표 <a class="header-anchor" href="#🎯-설계-목표" aria-label="Permalink to &quot;🎯 설계 목표&quot;">​</a></h2><p><strong>&quot;추가 설치 없이 Node.js만으로 모든 환경에서 실행 가능&quot;</strong></p><ul><li>✅ Node.js 18+ 기반 (추가 패키지 불필요)</li><li>✅ &quot;type&quot;: &quot;module&quot; 환경과 충돌 없음</li><li>✅ Windows/Mac/Linux 모두 호환</li><li>✅ Python 의존성 없음</li></ul><hr><h2 id="📦-선택한-방식-commonjs-cjs" tabindex="-1">📦 선택한 방식: CommonJS (.cjs) <a class="header-anchor" href="#📦-선택한-방식-commonjs-cjs" aria-label="Permalink to &quot;📦 선택한 방식: CommonJS (.cjs)&quot;">​</a></h2><h3 id="왜-cjs인가" tabindex="-1">왜 .cjs인가? <a class="header-anchor" href="#왜-cjs인가" aria-label="Permalink to &quot;왜 .cjs인가?&quot;">​</a></h3><table tabindex="0"><thead><tr><th>기준</th><th>.cjs</th><th>.mjs</th><th>.js (ESM)</th><th>.ts (Node 22.6+)</th><th>tsx</th></tr></thead><tbody><tr><td><strong>추가 설치</strong></td><td>❌ 없음</td><td>❌ 없음</td><td>❌ 없음</td><td>❌ 없음</td><td>✅ 필요</td></tr><tr><td><strong>Node 버전</strong></td><td>12+</td><td>12+</td><td>14+</td><td><strong>22.6+</strong></td><td>18+</td></tr><tr><td><strong>빌드 필요</strong></td><td>개발자만</td><td>개발자만</td><td>❌</td><td>❌</td><td>❌</td></tr><tr><td><strong>&quot;type&quot;: &quot;module&quot; 충돌</strong></td><td>❌ 없음</td><td>❌ 없음</td><td>✅ 있음</td><td>❌ 없음</td><td>❌ 없음</td></tr><tr><td><strong>타입 안전성</strong></td><td>✅ (빌드 시)</td><td>✅ (빌드 시)</td><td>❌</td><td>⚠️ (타입 체크 안함)</td><td>❌</td></tr><tr><td><strong>프로덕션 안정성</strong></td><td>⭐⭐⭐⭐⭐</td><td>⭐⭐⭐⭐⭐</td><td>⭐⭐⭐⭐</td><td>⭐⭐</td><td>⭐⭐⭐⭐</td></tr></tbody></table><p><strong>결론</strong>: <code>.cjs</code>는 <strong>최대 호환성</strong>과 <strong>제로 의존성</strong>을 동시에 달성</p><hr><h2 id="🏗️-빌드-배포-프로세스" tabindex="-1">🏗️ 빌드 &amp; 배포 프로세스 <a class="header-anchor" href="#🏗️-빌드-배포-프로세스" aria-label="Permalink to &quot;🏗️ 빌드 &amp; 배포 프로세스&quot;">​</a></h2><h3 id="_1-개발자-환경-typescript" tabindex="-1">1. 개발자 환경 (TypeScript) <a class="header-anchor" href="#_1-개발자-환경-typescript" aria-label="Permalink to &quot;1. 개발자 환경 (TypeScript)&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>moai-adk-ts/</span></span>
<span class="line"><span>└── src/</span></span>
<span class="line"><span>    └── claude/</span></span>
<span class="line"><span>        └── hooks/</span></span>
<span class="line"><span>            └── session/</span></span>
<span class="line"><span>                └── session-notice.ts  ← TypeScript 소스</span></span></code></pre></div><h3 id="_2-빌드-명령어" tabindex="-1">2. 빌드 명령어 <a class="header-anchor" href="#_2-빌드-명령어" aria-label="Permalink to &quot;2. 빌드 명령어&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bun</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build:hooks</span></span></code></pre></div><p><strong>실행 과정</strong>:</p><ol><li><code>tsup --config tsup.hooks.config.ts</code> - TypeScript → .cjs 변환</li><li><code>cp ../.claude/hooks/alfred/*.cjs templates/.claude/hooks/alfred/</code> - 템플릿에 복사</li></ol><p><strong>tsup 설정</strong> (<code>tsup.hooks.config.ts</code>):</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  entry: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;session-notice&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;src/claude/hooks/session/session-notice.ts&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  format: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;cjs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],                        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// CommonJS 형식</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  target: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node18&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Node.js 18+</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  outDir: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;../.claude/hooks/alfred&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 출력 디렉토리</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  outExtension</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ({ js: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.cjs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }),   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// .cjs 확장자</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bundle: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 의존성 번들링</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  minify: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 디버깅 가능하게</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="_3-배포-패키지-구조" tabindex="-1">3. 배포 패키지 구조 <a class="header-anchor" href="#_3-배포-패키지-구조" aria-label="Permalink to &quot;3. 배포 패키지 구조&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>moai-adk/</span></span>
<span class="line"><span>├── dist/                          # CLI 및 라이브러리</span></span>
<span class="line"><span>└── templates/</span></span>
<span class="line"><span>    └── .claude/</span></span>
<span class="line"><span>        ├── hooks/</span></span>
<span class="line"><span>        │   └── moai/</span></span>
<span class="line"><span>        │       ├── session-notice.cjs        ✅ 빌드됨</span></span>
<span class="line"><span>        │       ├── pre-write-guard.cjs       ✅ 빌드됨</span></span>
<span class="line"><span>        │       ├── tag-enforcer.cjs          ✅ 빌드됨</span></span>
<span class="line"><span>        │       ├── steering-guard.cjs        ✅ 빌드됨</span></span>
<span class="line"><span>        │       └── policy-block.cjs          ✅ 빌드됨</span></span>
<span class="line"><span>        └── settings.json</span></span></code></pre></div><h3 id="_4-사용자-환경-설치-후" tabindex="-1">4. 사용자 환경 (설치 후) <a class="header-anchor" href="#_4-사용자-환경-설치-후" aria-label="Permalink to &quot;4. 사용자 환경 (설치 후)&quot;">​</a></h3><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// .claude/settings.json</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;hooks&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;SessionStart&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;hooks&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;command&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;node $CLAUDE_PROJECT_DIR/.claude/hooks/alfred/session-notice.cjs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;command&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>실행</strong>: <code>node session-notice.cjs</code> ✅ 추가 설치 없이 바로 작동</p><hr><h2 id="✅-검증" tabindex="-1">✅ 검증 <a class="header-anchor" href="#✅-검증" aria-label="Permalink to &quot;✅ 검증&quot;">​</a></h2><h3 id="_1-node-js-버전별-호환성" tabindex="-1">1. Node.js 버전별 호환성 <a class="header-anchor" href="#_1-node-js-버전별-호환성" aria-label="Permalink to &quot;1. Node.js 버전별 호환성&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Node.js 18</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> session-notice.cjs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  ✅</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Node.js 20</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> session-notice.cjs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  ✅</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Node.js 22</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> session-notice.cjs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  ✅</span></span></code></pre></div><h3 id="_2-type-module-환경" tabindex="-1">2. &quot;type&quot;: &quot;module&quot; 환경 <a class="header-anchor" href="#_2-type-module-환경" aria-label="Permalink to &quot;2. &quot;type&quot;: &quot;module&quot; 환경&quot;">​</a></h3><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// package.json</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;module&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># .js 파일 - ❌ CommonJS 문법 사용 시 오류</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> session-notice.js</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># .cjs 파일 - ✅ CommonJS로 명시적 인식</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> session-notice.cjs</span></span></code></pre></div><h3 id="_3-크로스-플랫폼" tabindex="-1">3. 크로스 플랫폼 <a class="header-anchor" href="#_3-크로스-플랫폼" aria-label="Permalink to &quot;3. 크로스 플랫폼&quot;">​</a></h3><ul><li>✅ Windows: <code>node session-notice.cjs</code></li><li>✅ macOS: <code>node session-notice.cjs</code></li><li>✅ Linux: <code>node session-notice.cjs</code></li></ul><hr><h2 id="🚀-왜-다른-방식을-선택하지-않았나" tabindex="-1">🚀 왜 다른 방식을 선택하지 않았나? <a class="header-anchor" href="#🚀-왜-다른-방식을-선택하지-않았나" aria-label="Permalink to &quot;🚀 왜 다른 방식을 선택하지 않았나?&quot;">​</a></h2><h3 id="❌-node-js-22-6-native-typescript" tabindex="-1">❌ Node.js 22.6+ Native TypeScript <a class="header-anchor" href="#❌-node-js-22-6-native-typescript" aria-label="Permalink to &quot;❌ Node.js 22.6+ Native TypeScript&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --experimental-strip-types</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> session-notice.ts</span></span></code></pre></div><p><strong>문제점</strong>:</p><ul><li><strong>Node.js 22.6+ 필수</strong> - 대부분 사용자가 18-20 사용</li><li><strong>실험적 기능</strong> - 프로덕션 불안정</li><li><strong>타입 체크 안 함</strong> - 런타임만 처리</li></ul><p><strong>결론</strong>: 호환성 문제로 <strong>부적합</strong></p><hr><h3 id="❌-tsx" tabindex="-1">❌ tsx <a class="header-anchor" href="#❌-tsx" aria-label="Permalink to &quot;❌ tsx&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tsx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> session-notice.ts</span></span></code></pre></div><p><strong>문제점</strong>:</p><ul><li><strong>추가 설치 필요</strong> - <code>npm install -D tsx</code></li><li><strong>목표 위반</strong> - &quot;추가 설치 없이&quot; 원칙 위배</li></ul><p><strong>결론</strong>: 의존성 증가로 <strong>부적합</strong></p><hr><h3 id="❌-순수-javascript-esm" tabindex="-1">❌ 순수 JavaScript (ESM) <a class="header-anchor" href="#❌-순수-javascript-esm" aria-label="Permalink to &quot;❌ 순수 JavaScript (ESM)&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// session-notice.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div><p><strong>문제점</strong>:</p><ul><li><strong>TypeScript 타입 안전성 상실</strong></li><li><strong>개발 경험 저하</strong></li><li><strong>유지보수 어려움</strong></li></ul><p><strong>결론</strong>: 품질 저하로 <strong>부적합</strong></p><hr><h2 id="📊-최종-아키텍처" tabindex="-1">📊 최종 아키텍처 <a class="header-anchor" href="#📊-최종-아키텍처" aria-label="Permalink to &quot;📊 최종 아키텍처&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>┌─────────────────────┐</span></span>
<span class="line"><span>│ 개발자 (MoAI Team)  │</span></span>
<span class="line"><span>│                     │</span></span>
<span class="line"><span>│ TypeScript 소스     │</span></span>
<span class="line"><span>│ session-notice.ts   │</span></span>
<span class="line"><span>└──────────┬──────────┘</span></span>
<span class="line"><span>           │</span></span>
<span class="line"><span>           │ bun run build:hooks</span></span>
<span class="line"><span>           │ (tsup)</span></span>
<span class="line"><span>           ▼</span></span>
<span class="line"><span>┌─────────────────────┐</span></span>
<span class="line"><span>│ 빌드된 파일          │</span></span>
<span class="line"><span>│ session-notice.cjs  │</span></span>
<span class="line"><span>│ (CommonJS)          │</span></span>
<span class="line"><span>└──────────┬──────────┘</span></span>
<span class="line"><span>           │</span></span>
<span class="line"><span>           │ npm publish / bun publish</span></span>
<span class="line"><span>           │</span></span>
<span class="line"><span>           ▼</span></span>
<span class="line"><span>┌─────────────────────┐</span></span>
<span class="line"><span>│ 사용자 (고객)        │</span></span>
<span class="line"><span>│                     │</span></span>
<span class="line"><span>│ node xxx.cjs  ✅    │</span></span>
<span class="line"><span>│                     │</span></span>
<span class="line"><span>│ Node.js 18+ 만 있으면 됨</span></span>
<span class="line"><span>└─────────────────────┘</span></span></code></pre></div><hr><h2 id="🔄-ci-cd-파이프라인" tabindex="-1">🔄 CI/CD 파이프라인 <a class="header-anchor" href="#🔄-ci-cd-파이프라인" aria-label="Permalink to &quot;🔄 CI/CD 파이프라인&quot;">​</a></h2><h3 id="prepublishonly-hook" tabindex="-1">prepublishOnly Hook <a class="header-anchor" href="#prepublishonly-hook" aria-label="Permalink to &quot;prepublishOnly Hook&quot;">​</a></h3><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// package.json</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;prepublishOnly&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bun run ci&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;ci&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bun run clean &amp;&amp; bun run build &amp;&amp; bun run check &amp;&amp; bun run test:ci&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>실행 순서</strong>:</p><ol><li><code>clean</code> - 이전 빌드 정리</li><li><code>build</code> - TypeScript 빌드 (CLI + hooks)</li><li><code>check</code> - 타입 체크 + 린트</li><li><code>test:ci</code> - 전체 테스트 + 커버리지</li></ol><p><strong>보장</strong>:</p><ul><li>✅ 타입 안전성 검증됨</li><li>✅ 모든 테스트 통과</li><li>✅ 빌드된 .cjs 파일 포함</li></ul><hr><h2 id="📝-베스트-프랙티스" tabindex="-1">📝 베스트 프랙티스 <a class="header-anchor" href="#📝-베스트-프랙티스" aria-label="Permalink to &quot;📝 베스트 프랙티스&quot;">​</a></h2><h3 id="_1-개발-시" tabindex="-1">1. 개발 시 <a class="header-anchor" href="#_1-개발-시" aria-label="Permalink to &quot;1. 개발 시&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># TypeScript 소스 수정</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/claude/hooks/session/session-notice.ts</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 타입 체크</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bun</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> type-check</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 빌드</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bun</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build:hooks</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 테스트</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ../.claude/hooks/alfred/session-notice.cjs</span></span></code></pre></div><h3 id="_2-배포-전" tabindex="-1">2. 배포 전 <a class="header-anchor" href="#_2-배포-전" aria-label="Permalink to &quot;2. 배포 전&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 전체 CI 실행</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bun</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ci</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 패키지 검증</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pack</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dry-run</span></span></code></pre></div><h3 id="_3-사용자-지원" tabindex="-1">3. 사용자 지원 <a class="header-anchor" href="#_3-사용자-지원" aria-label="Permalink to &quot;3. 사용자 지원&quot;">​</a></h3><p><strong>FAQ: &quot;훅이 실행되지 않아요&quot;</strong></p><p><strong>체크리스트</strong>:</p><ol><li>Node.js 18+ 설치 확인: <code>node -v</code></li><li>파일 경로 확인: <code>ls .claude/hooks/alfred/session-notice.cjs</code></li><li>실행 권한 확인: <code>ls -l .claude/hooks/alfred/session-notice.cjs</code></li><li>수동 실행 테스트: <code>node .claude/hooks/alfred/session-notice.cjs</code></li></ol><hr><h2 id="🎉-결론" tabindex="-1">🎉 결론 <a class="header-anchor" href="#🎉-결론" aria-label="Permalink to &quot;🎉 결론&quot;">​</a></h2><p><strong>현재 .cjs 방식은 목표를 완벽히 달성했습니다</strong>:</p><p>✅ <strong>제로 의존성</strong> - Node.js 18+ 만 있으면 됨 ✅ <strong>최대 호환성</strong> - 모든 OS, 모든 Node 버전 (18+) ✅ <strong>타입 안전</strong> - 빌드 시 TypeScript 타입 체크 ✅ <strong>프로덕션 검증</strong> - 대부분의 npm 패키지가 사용하는 표준 방식 ✅ <strong>사용자 편의</strong> - <code>node xxx.cjs</code> 바로 실행 가능</p><p><strong>이것이 Node.js 생태계에서 추가 설치 없이 TypeScript를 배포하는 최선의 방법입니다.</strong> 🚀</p>`,78)])])}const g=a(e,[["render",l]]);export{c as __pageData,g as default};
