# @CODE:LANG-001-PYTHON | SPEC: SPEC-LANGUAGE-DETECTION-001.md | TEST: tests/test_workflows.py
# Python Project TAG Validation Workflow
# Automatically validates TAGs in Python projects with pytest, ruff, and mypy

name: TAG Validation (Python)

on:
  push:
    branches: [main, develop, feature/**]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    name: Validate TAGs - Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.11', '3.12', '3.13']
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install uv
        run: pip install uv

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ matrix.python-version }}-
            uv-${{ runner.os }}-

      - name: Install dependencies with uv
        run: uv sync --all-extras --dev

      - name: Run TAG validation
        run: |
          uv run pytest tests/ -v \
            --cov=src \
            --cov-report=term-missing \
            --cov-report=html:htmlcov \
            --cov-report=xml:coverage.xml \
            --cov-fail-under=85
        continue-on-error: false

      - name: Run linting with ruff
        run: uv run ruff check src/ tests/
        continue-on-error: false

      - name: Run type checking with mypy
        run: uv run mypy src/ --ignore-missing-imports
        continue-on-error: true

      - name: Upload coverage reports
        if: matrix.python-version == '3.13'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-python
          path: |
            htmlcov/
            coverage.xml

      - name: Comment PR with coverage
        if: github.event_name == 'pull_request' && matrix.python-version == '3.13'
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MINIMUM_GREEN: 85
          MINIMUM_ORANGE: 75

      - name: Check TAG chain integrity
        run: |
          echo "Validating TAG chain integrity..."
          uv run python -m moai_adk.core.tags.validator --validate-chain
        continue-on-error: true

  quality-gate:
    name: Quality Gate Summary
    needs: validate
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Check validation results
        run: |
          if [ "${{ needs.validate.result }}" != "success" ]; then
            echo "❌ TAG validation failed"
            exit 1
          fi
          echo "✅ TAG validation passed"

      - name: Quality metrics summary
        run: |
          echo "## Quality Metrics Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Python tests passed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Code coverage ≥ 85%" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Linting passed (ruff)" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Type checking passed (mypy)" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ TAG chain validated" >> $GITHUB_STEP_SUMMARY
